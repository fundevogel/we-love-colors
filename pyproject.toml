[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "farben"
version = "2.0.0"
description = "PANTONE®, RAL®, Dulux®, Copic®, NCS® and Prismacolor® color palettes for Scribus, GIMP, AutoCAD, Inkscape & LibreOffice"
license = "MIT"
authors = ["Fundevogel <maschinenraum@fundevogel.de>"]
maintainers = ["Martin Folkers <hello@twobrain.io>"]
readme = "README.md"
homepage = "https://fundevogel.de"
repository = "https://codeberg.org/Fundevogel/farben"
keywords = [
    "autocad",
    "color-palettes",
    "colors",
    "copic",
    "dulux",
    "gimp",
    "inkscape",
    "libreoffice",
    "ncs",
    "palettes",
    "pantone",
    "prismacolor",
    "ral",
    "scribus",
    "swatches",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: SQL",
    "Topic :: Database",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "farben", from = "src"}]

[tool.poetry.dependencies]
python = "^3.8"
beautifulsoup4 = "^4"
click = "^8"
lxml = "^4"
pillow = "^9"
requests = "^2"

[tool.poetry.group.dev.dependencies]
# Testing
bandit = "^1"
black = "^22"
invoke = "^1"
isort = "^5"
pylint = "^2"
pytest = "^7"
pytest-cov = "^4"
pytest-sugar = "^0.9"
tox = "^3"
tox-pyenv = "^1"

# Packages
beautifulsoup4 = "^4"
click = "^8"
lxml = "^4"
pillow = "^9"
requests = "^2"

[tool.poetry.urls]
"Funding" = "https://donate.rsf.org"
"Issue Tracker" = "https://codeberg.org/Fundevogel/farben/issues"

[tool.poetry.scripts]
farben = "farben:cli"

[tool.bandit]
exclude_dirs = ["tests"]
# Disable rule 'random'
skips = ["B311"]

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
multi_line_output = 3
force_sort_within_sections = true

[tool.pylint.'MESSAGES CONTROL']
# Fix 'source unavailable' warning
extension-pkg-allow-list = ["lxml"]
max-line-length = 88
# Conflicts with 'logging-fstring-interpolation' (rule 'W1201')
disable = ["W1203"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{38,39,310,311}

[testenv]
description = Run tests using 'pytest'
deps =
    pytest
    beautifulsoup4
    click
    lxml
    pillow
    requests
commands = pytest
"""
